name: Make cli release

on:
  push:
    tags:
      - release/app/v*

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF_NAME/release\/app\/v}

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: Wallpaperize cli ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
  release-matrix:
    name: release linux/amd64
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF_NAME/release\/app\/v}

    - name: Release go binary
      uses: wangyoucao577/go-release-action@v1.22
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: 1.17
        project_path: ./app
        binary_name: wallpaperize
        ldflags: -X=main.appVersion=${{ steps.get_version.outputs.VERSION }} -X=main.appBuild=${GITHUB_SHA}
        asset_name: wallpaperize-${{ matrix.goos }}-${{ matrix.goarch }}



